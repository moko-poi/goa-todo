// Code generated by goa v3.7.0, DO NOT EDIT.
//
// todo views
//
// Command:
// $ goa gen github.com/takahashis-shun/todo-goa/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Todo is the viewed result type that is projected based on a view.
type Todo struct {
	// Type to project
	Projected *TodoView
	// View to render
	View string
}

// TodoView is a type that runs validations on a projected type.
type TodoView struct {
	// ID
	ID *int
	// Title
	Title *string
	// IsDone
	IsDone *bool
}

var (
	// TodoMap is a map indexing the attribute names of Todo by view name.
	TodoMap = map[string][]string{
		"default": {
			"id",
			"title",
			"is_done",
		},
	}
)

// ValidateTodo runs the validations defined on the viewed result type Todo.
func ValidateTodo(result *Todo) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateTodoView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []interface{}{"default"})
	}
	return
}

// ValidateTodoView runs the validations defined on TodoView using the
// "default" view.
func ValidateTodoView(result *TodoView) (err error) {

	return
}
